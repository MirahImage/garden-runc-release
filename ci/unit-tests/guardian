#!/usr/bin/env bash
set -ex

# shellcheck source=../helpers/device-control
source "$( dirname "$0" )/../helpers/device-control"

base=$PWD

cd "$(dirname "$0")/../.."


export GOROOT=/usr/local/go
export PATH=$GOROOT/bin:$PATH

export GOPATH=$PWD
export PATH=$HOME/go/bin:$GOPATH/bin:$PATH

go get github.com/opencontainers/runc
go install -tags "seccomp apparmor" --ldflags '-extldflags "-static"' github.com/opencontainers/runc

# Set up AppArmor
if ! grep securityfs /proc/self/mounts > /dev/null 2>&1 ; then
  mount -t securityfs securityfs /sys/kernel/security
fi
if ! aa-status | grep garden-default > /dev/null; then
  apparmor_parser -a ci/assets/garden-default
fi

cd src/code.cloudfoundry.org/guardian

export GARDEN_TEST_ROOTFS=/opt/warden/rootfs.tar
export GARDEN_FUSE_TEST_ROOTFS=/opt/warden/fuse-rootfs.tar
export GARDEN_NESTABLE_TEST_ROOTFS=/opt/warden/nestable-rootfs.tar
export GARDEN_TAR_PATH=/opt/static-assets/tar/bin/tar
export GARDEN_TEST_GRAPHPATH=/tmp/aufs_mount
export GARDEN_DORA_PATH=$PWD/../garden-integration-tests/resources/dora.tgz.tar
export GARDEN_DOCKER_REGISTRY_V2_TEST_ROOTFS=/opt/warden/docker-registry-v2-rootfs.tar

permit_device_control
create_loop_devices 256

go version

if [ -z "${NO_GO_VET:-}" ]; then
  go vet ./...
fi
echo "compiling test process: $(date)"

cmd="ginkgo -tags daemon -r -p --keepGoing --nodes=${GINKGO_NODES:-8} --failOnPending --randomizeSuites --randomizeAllSpecs"
if [ -n "${RACE_DETECTION:-}" ]; then
  cmd="$cmd --race"
fi
cmd="$cmd $*"

if [ -n "${SLOW_MOBIUS_TIME_LIMIT_SECONDS:-}" ]; then
  cmd="$base/gr-release-develop/ci/helpers/slowmobius $cmd"
fi

$cmd
