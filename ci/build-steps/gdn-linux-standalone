#!/usr/bin/env bash

# This script is almost entirely based on
# https://github.com/concourse/bin/blob/master/ci/build-linux and
# https://github.com/concourse/bin/blob/master/scripts/build-linux

set -ex

export GOPATH=$PWD/gr-release-develop
export PATH=$PATH:$GOPATH/bin

basedir=$PWD

# If you want to fly execute this, you will have to pass SKIP_VERSION=true
if [ -z "$SKIP_VERSION" ]; then
  gdn_version=$(cd gr-release-develop/src/code.cloudfoundry.org/guardian && git rev-parse HEAD)
  gdn_build_ldflags="-X main.version=${gdn_version}"
fi

# shellcheck source=../helpers/device-control
source "$( dirname "$0" )/../helpers/device-control"

function build() {
  go get github.com/masters-of-cats/go-bindata/go-bindata

  LINUX_ASSETS=$PWD/linux

  rm -rf "$LINUX_ASSETS"
  mkdir -p "${LINUX_ASSETS}/sbin"
  mkdir -p "${LINUX_ASSETS}/bin"

  cp /opt/static-assets/tar/bin/tar "${LINUX_ASSETS}/bin/tar"

  # go-bindata does weird stuff with symlinks. we only care about iptables anyway
  cp -aL /opt/static-assets/iptables/sbin/iptables "${LINUX_ASSETS}/sbin/iptables"
  cp -aL /opt/static-assets/iptables/sbin/iptables-restore "${LINUX_ASSETS}/sbin/iptables-restore"

  pushd gr-release-develop
    # workaround 'mv /root/.tmp/... /tmp/...: invalid cross-device link'
    HOME=$PWD bosh sync-blobs

    (
      go install code.cloudfoundry.org/guardian/cmd/dadoo
      cp bin/dadoo "${LINUX_ASSETS}/bin"

      pushd src/github.com/opencontainers/runc
        PKG_CONFIG_PATH=/opt/static-assets/libseccomp/lib/pkgconfig \
          GOPATH=$PWD/Godeps/_workspace:$GOPATH \
          BUILDTAGS=seccomp \
          make static

        mv runc "${LINUX_ASSETS}/bin"
      popd

      pushd src/code.cloudfoundry.org/guardian/rundmc/nstar
        make
        mv nstar "${LINUX_ASSETS}/bin"
      popd

      pushd src/code.cloudfoundry.org/guardian/cmd/init
        gcc -static -o init init.c
        mv init "${LINUX_ASSETS}/bin"
      popd

      pushd src/code.cloudfoundry.org/grootfs
        make
        mv grootfs "${LINUX_ASSETS}/bin"
        mv tardis "${LINUX_ASSETS}/bin"
      popd
    )
  popd

  go-bindata -nomemcopy -pkg bindata -o gr-release-develop/src/code.cloudfoundry.org/guardian/bindata/bindata.go linux/...

  # must be built with 'daemon' flag because of docker packages :|
  go build \
    -tags daemon \
    -o binary/gdn \
    -ldflags "$gdn_build_ldflags" \
    code.cloudfoundry.org/guardian/cmd/gdn
}

function prepare() {
  permit_device_control
  create_loop_devices 256

  binary/gdn \
    server \
    --depot="${tmpdir}/depot" \
    --bind-ip=0.0.0.0 \
    --bind-port=7777 \
    --debug-bind-ip=0.0.0.0 \
    --debug-bind-port=17013 \
    --network-pool=10.254.1.0/24 \
    --log-level="${LOG_LEVEL}" \
    --default-rootfs=/opt/warden/rootfs.tar &

  sleep 5
  curl "${GARDEN_ADDRESS}:${GARDEN_PORT}/ping"
}

function test() {
  cd "${GOPATH}"/src/code.cloudfoundry.org/garden-integration-tests

  cmd="ginkgo -p -nodes=${GINKGO_NODES:-8} -failOnPending -randomizeSuites -randomizeAllSpecs $*"
  if [ -n "${SLOW_MOBIUS_TIME_LIMIT_SECONDS:-}" ]; then
    cmd="$basedir/gr-release-develop/ci/helpers/slowmobius $cmd"
  fi

  $cmd
}

export tmpdir=/tmp/dir
export GARDEN_ADDRESS
GARDEN_ADDRESS="$( hostname )"
export GARDEN_PORT=7777
export GARDEN_DEBUG_PORT=17013
export NESTED=true

build
prepare
test "$*"
